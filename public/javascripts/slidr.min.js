


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=10">
        <title>slidr/slidr.min.js at master Â· bchanx/slidr</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="https://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta property="og:image" content="https://github.global.ssl.fastly.net/images/modules/logos_page/Octocat.png">
    <meta name="hostname" content="github-fe130-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 1.9.3p194-tcs-github-tcmalloc (0e75de19f8) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />
    


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="74400B69:68E1:B420E4:527E1259" name="octolytics-dimension-request_id" /><meta content="926890" name="octolytics-actor-id" /><meta content="matuba" name="octolytics-actor-login" /><meta content="e4d3cdcb7ddd30b8af40f28fb293366f5ef161b36b819d468aad712722053083" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="GD0Cy7BseB7I1zHpZKF7Vp/QLFiJfByxvBr8iGzsUPo=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-804556dba6658262abda18880c76c8b30304dcb3.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-3f000d5f6a217f4a3e6bf4941cce685bef6be8f8.css" media="all" rel="stylesheet" type="text/css" />
    

    

      <script src="https://github.global.ssl.fastly.net/assets/frameworks-bca527bb59d94c16d6bf2a759779d7953fa41e76.js" type="text/javascript"></script>
      <script src="https://github.global.ssl.fastly.net/assets/github-562aef0f367577dc23ee5d12795ac4e31b75e5fa.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="28c852459656e837e136705aa7db0159">

        <link data-pjax-transient rel='permalink' href='/bchanx/slidr/blob/31d66e35838dacec80eeda6c098ba08004c0a3bc/slidr.min.js'>
  <meta property="og:title" content="slidr"/>
  <meta property="og:type" content="githubog:gitrepository"/>
  <meta property="og:url" content="https://github.com/bchanx/slidr"/>
  <meta property="og:image" content="https://github.global.ssl.fastly.net/images/gravatars/gravatar-user-420.png"/>
  <meta property="og:site_name" content="GitHub"/>
  <meta property="og:description" content="slidr - add some slide effects."/>

  <meta name="description" content="slidr - add some slide effects." />

  <meta content="437296" name="octolytics-dimension-user_id" /><meta content="bchanx" name="octolytics-dimension-user_login" /><meta content="11091579" name="octolytics-dimension-repository_id" /><meta content="bchanx/slidr" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="11091579" name="octolytics-dimension-repository_network_root_id" /><meta content="bchanx/slidr" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/bchanx/slidr/commits/master.atom" rel="alternate" title="Recent Commits to slidr:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public  page-blob">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" class="notification-indicator tooltipped downwards" data-gotokey="n" title="You have unread notifications">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="matuba"
      data-repo="bchanx/slidr"
      data-branch="master"
      data-sha="27213ff6cd036f3fb892d68aaa6663ac1c207e93"
  >

    <input type="hidden" name="nwo" value="bchanx/slidr" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/matuba" class="name">
        <img height="20" src="https://0.gravatar.com/avatar/0597d6999cdbac17cb2668f43cc8eb06?d=https%3A%2F%2Fidenticons.github.com%2Faf53c9eab40e2f240a2367028792b534.png&amp;r=x&amp;s=140" width="20" /> matuba
      </a>
    </li>

      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo" aria-label="Create a new repo">
          <span class="octicon octicon-repo-create"></span>
        </a>
      </li>

      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          aria-label="Account settings "
          title="Account settings ">
          <span class="octicon octicon-tools"></span>
        </a>
      </li>
      <li>
        <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" title="Sign out" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </a>
      </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>



    <li class="section-title">
      <span title="bchanx/slidr">This repository</span>
    </li>
      <li>
        <a href="/bchanx/slidr/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

      




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="GD0Cy7BseB7I1zHpZKF7Vp/QLFiJfByxvBr8iGzsUPo=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="11091579" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/bchanx/slidr/watchers">
        47
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/bchanx/slidr/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/bchanx/slidr/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/bchanx/slidr/stargazers">
        765
      </a>
  </div>

  </li>


        <li>
          <a href="/bchanx/slidr/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/bchanx/slidr/network" class="social-count">78</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/bchanx" class="url fn" itemprop="url" rel="author"><span itemprop="title">bchanx</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/bchanx/slidr" class="js-current-repository js-repo-home-link">slidr</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">

      <div class="repository-with-sidebar repo-container ">

        <div class="repository-sidebar">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" title="Code">
        <a href="/bchanx/slidr" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /bchanx/slidr">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" title="Issues">
          <a href="/bchanx/slidr/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /bchanx/slidr/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>4</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" title="Pull Requests"><a href="/bchanx/slidr/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /bchanx/slidr/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>0</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped leftwards" title="Wiki">
          <a href="/bchanx/slidr/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /bchanx/slidr/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" title="Pulse">
        <a href="/bchanx/slidr/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /bchanx/slidr/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Graphs">
        <a href="/bchanx/slidr/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /bchanx/slidr/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" title="Network">
        <a href="/bchanx/slidr/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /bchanx/slidr/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

            <div class="only-with-full-nav">
              

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/bchanx/slidr.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/bchanx/slidr.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:bchanx/slidr.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:bchanx/slidr.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/bchanx/slidr" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/bchanx/slidr" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" title="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="github-mac://openRepo/https://github.com/bchanx/slidr" data-url="github-mac://openRepo/https://github.com/bchanx/slidr" class="minibutton sidebar-button js-conduit-rewrite-url">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


              <a href="/bchanx/slidr/archive/master.zip"
                 class="minibutton sidebar-button"
                 title="Download this repository as a zip file"
                 rel="nofollow">
                <span class="octicon octicon-cloud-download"></span>
                Download ZIP
              </a>
            </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:02b1058724978587ff22ed6c93196250 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/bchanx/slidr/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/bchanx/slidr/blob/master/slidr.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/bchanx/slidr/tree/v0.1.0/slidr.min.js"
                 data-name="v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v0.1.0">v0.1.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/bchanx/slidr" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">slidr</span></a></span></span><span class="separator"> / </span><strong class="final-path">slidr.min.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="slidr.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>



  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://1.gravatar.com/avatar/c43834b8380872e2bca1bf624c6a693f?d=https%3A%2F%2Fidenticons.github.com%2F2c18c5fd193de7890765f1f414937756.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/bchanx" rel="author">bchanx</a></span>
    <time class="js-relative-date" datetime="2013-10-23T18:22:59-07:00" title="2013-10-23 18:22:59">October 23, 2013</time>
    <div class="commit-title">
        <a href="/bchanx/slidr/commit/31d66e35838dacec80eeda6c098ba08004c0a3bc" class="message" data-pjax="true" title="Fix IE inconsistencies">Fix IE inconsistencies</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img height="24" src="https://1.gravatar.com/avatar/c43834b8380872e2bca1bf624c6a693f?d=https%3A%2F%2Fidenticons.github.com%2F2c18c5fd193de7890765f1f414937756.png&amp;r=x&amp;s=140" width="24" />
            <a href="/bchanx">bchanx</a>
          </li>
      </ul>
    </div>
  </div>

<div id="files" class="bubble">
  <div class="file">
    <div class="meta">
      <div class="info">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
          <span>39 lines (38 sloc)</span>
        <span>15.695 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards js-conduit-openfile-check"
               href="github-mac://openRepo/https://github.com/bchanx/slidr?branch=master&amp;filepath=slidr.min.js"
               data-url="github-mac://openRepo/https://github.com/bchanx/slidr?branch=master&amp;filepath=slidr.min.js"
               title="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped upwards"
                   title="Clicking this button will automatically fork this project so you can edit the file"
                   href="/bchanx/slidr/edit/master/slidr.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/bchanx/slidr/raw/master/slidr.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/bchanx/slidr/blame/master/slidr.min.js" class="button minibutton ">Blame</a>
          <a href="/bchanx/slidr/commits/master/slidr.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/bchanx/slidr/delete/master/slidr.min.js"
             title="Fork this project and delete file"
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->

    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>

            </td>
            <td class="blob-line-code">
                    <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*!</span></div><div class='line' id='LC2'><span class="cm"> * slidr v0.1.0 - A Javascript library for adding slide effects.</span></div><div class='line' id='LC3'><span class="cm"> * bchanx.com/slidr</span></div><div class='line' id='LC4'><span class="cm"> * MIT licensed</span></div><div class='line' id='LC5'><span class="cm"> *</span></div><div class='line' id='LC6'><span class="cm"> * Copyright (c) 2013 Brian Chan (bchanx.com)</span></div><div class='line' id='LC7'><span class="cm"> */</span></div><div class='line' id='LC8'><span class="kd">function</span> <span class="nx">y</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">id</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">controls</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">p</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">e</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">k</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">I</span><span class="o">:</span><span class="p">{},</span><span class="nx">B</span><span class="o">:</span><span class="p">{},</span><span class="nx">t</span><span class="o">:</span><span class="p">{},</span><span class="nx">g</span><span class="o">:</span><span class="p">{</span><span class="nx">up</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">down</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="kc">null</span><span class="p">}};</span><span class="k">return</span><span class="p">{</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">canSlide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">n</span><span class="p">.</span><span class="nx">M</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">slide</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">auto</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">k</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">||</span><span class="mi">5</span><span class="nx">E3</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">stop</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">timing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="o">===</span><span class="nb">Object</span><span class="o">?</span></div><div class='line' id='LC9'><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">timing</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">timing</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">timing</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">breadcrumbs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">n</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">controls</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">n</span><span class="p">.</span><span class="nx">controls</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">}}}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="k">return</span> <span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]]}</span><span class="k">return</span> <span class="nx">c</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">v</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">trim</span><span class="p">(),</span></div><div class='line' id='LC10'><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\s+/</span><span class="p">)</span><span class="o">:</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="s2">&quot;add&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="s2">&quot;rm&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\s&#39;&quot;]/gi</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">sort</span><span class="p">().</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">)];</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;px&quot;</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">search</span><span class="p">(</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">?</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;none&quot;</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">)]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC11'><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;click&quot;</span><span class="p">;</span><span class="s2">&quot;string&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;click&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nb">window</span><span class="o">?</span><span class="s2">&quot;touchend&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">?</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">A</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;webkit&quot;</span><span class="p">,</span><span class="s2">&quot;Moz&quot;</span><span class="p">,</span><span class="s2">&quot;ms&quot;</span><span class="p">,</span><span class="s2">&quot;O&quot;</span><span class="p">],</span><span class="nx">h</span><span class="o">:</span><span class="p">{},</span><span class="nx">U</span><span class="o">:</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;html&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">style</span><span class="p">,</span><span class="nx">styleSheet</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;text/css&quot;</span><span class="p">});</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">sheet</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">}(),</span><span class="nx">J</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC12'><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">selectorText</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssText</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; {&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">===</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssText</span><span class="p">)</span><span class="o">===</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">deleteRule</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">insertRule</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span><span class="nx">O</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;{&quot;</span><span class="p">],</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;}&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)},</span><span class="nx">d</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">)},</span><span class="nx">D</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="s2">&quot;animation&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">3</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;keyframes &quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; {&quot;</span><span class="p">],</span><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">O</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]));</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;}&quot;</span><span class="p">);</span></div><div class='line' id='LC13'><span class="nx">e</span><span class="p">.</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))}},</span><span class="nx">n</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span> <span class="k">in</span> <span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">U</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">l</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">P</span><span class="o">:</span><span class="nx">f</span><span class="p">};</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">A</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">U</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">A</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">l</span><span class="o">:</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">A</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">P</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">A</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="nx">f</span><span class="p">});</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">)}</span><span class="k">return</span> <span class="kc">null</span><span class="o">!==</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">l</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">h</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">P</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">supports</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">add</span><span class="o">:</span><span class="p">{</span><span class="nx">fade</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC14'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="mi">0</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">},</span><span class="mi">100</span><span class="o">:</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}})},</span><span class="nx">linear</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="mi">0</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">},</span><span class="mi">1</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">},</span><span class="mi">2</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">f</span><span class="p">},</span><span class="mi">98</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">m</span><span class="p">},</span><span class="mi">99</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;out&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">},</span><span class="mi">100</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="p">(</span><span class="s2">&quot;out&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}})},</span><span class="nx">cube</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="mi">0</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;rotate&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;deg) translateZ(&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">},</span><span class="mi">100</span><span class="o">:</span><span class="p">{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;rotate&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;deg) translateZ(&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}})}},</span><span class="nx">N</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">ca</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="s1">&#39;aside[id*=&quot;-&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="p">,</span><span class="nx">g</span><span class="o">:</span><span class="s2">&quot;slidr-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">q</span><span class="o">:</span><span class="s1">&#39;aside[id*=&quot;-&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;] .slidr-&#39;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">data</span><span class="o">:</span><span class="s2">&quot;data-slidr-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">id</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="s1">&#39;aside[id=&quot;&#39;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;]&#39;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">}}}},</span><span class="nx">s</span><span class="o">=</span><span class="p">{</span><span class="nx">L</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;cube&quot;</span><span class="p">,</span><span class="s2">&quot;fade&quot;</span><span class="p">,</span><span class="s2">&quot;linear&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">],</span><span class="nx">C</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">transition</span><span class="p">;</span><span class="k">return</span> <span class="mi">0</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">.</span><span class="nx">L</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||!</span><span class="nx">q</span><span class="p">.</span><span class="nx">V</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;none&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC16'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">H</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">])},</span><span class="nx">set</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="p">{});</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">B</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">apply</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="nx">k</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}},</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">u</span><span class="o">:</span><span class="s2">&quot;left up top right down bottom&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">w</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">l</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">H</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">u</span><span class="p">[(</span><span class="nx">l</span><span class="p">.</span><span class="nx">u</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">%</span><span class="nx">b</span><span class="p">]</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">arguments</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">));</span><span class="k">return</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">display</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC17'><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;fade&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;fade&quot;</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">controls</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">controls</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">breadcrumbs</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">o</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">aa</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="s2">&quot;up&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">?</span><span class="s2">&quot;down&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">go</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="s2">&quot;fade&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="s2">&quot;fade&quot;</span><span class="p">)}},</span><span class="nx">go</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC18'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">s</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">find</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="p">[]</span><span class="o">:</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)(</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-slidr&quot;</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">0</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="o">:</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">));</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">C</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">constructor</span><span class="o">!==</span><span class="nb">Array</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">r</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">t</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span></div><div class='line' id='LC19'><span class="nx">f</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">),</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="o">!=</span><span class="nx">k</span><span class="o">||</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">!=</span><span class="nx">g</span><span class="o">||</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">!=</span><span class="nx">t</span><span class="o">||</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">!=</span><span class="nx">c</span><span class="o">||</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="o">!=</span><span class="nx">c</span><span class="p">))</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">I</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">s</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">));</span><span class="nx">q</span><span class="p">.</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="p">(</span><span class="nx">a</span><span class="p">));</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="s2">&quot;control&quot;</span><span class="p">),</span><span class="nx">types</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;border&quot;</span><span class="p">,</span><span class="s2">&quot;corner&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">],</span><span class="nx">valid</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="o">&lt;=</span><span class="nx">h</span><span class="p">.</span><span class="nx">types</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">create</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="o">=</span></div><div class='line' id='LC20'><span class="nx">g</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;aside&quot;</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">),{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;z-index&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">])}</span><span class="nx">h</span><span class="p">.</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">);</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">onclick</span><span class="p">(</span><span class="nx">a</span><span class="p">))}},</span><span class="nx">l</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="s2">&quot;10px&quot;</span><span class="p">,</span><span class="s2">&quot;box-sizing&quot;</span><span class="o">:</span><span class="s2">&quot;border-box&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;75px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;75px&quot;</span><span class="p">,</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translateZ(9998px)&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="o">+</span></div><div class='line' id='LC21'><span class="s2">&quot;.disabled&quot;</span><span class="p">,{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translateZ(0px) !important&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;.breadcrumbs&quot;</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;.border&quot;</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;opacity 0.2s linear&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;.disabled&quot;</span><span class="p">,{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;0.05&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;right&quot;</span><span class="o">===</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;up&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="s2">&quot;down&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;22px&quot;</span><span class="o">:</span><span class="s2">&quot;16px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;16px&quot;</span><span class="o">:</span><span class="s2">&quot;22px&quot;</span><span class="p">};</span><span class="nx">m</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;50%&quot;</span><span class="p">;</span></div><div class='line' id='LC22'><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;margin-&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;-8px&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="s1">&#39;&quot;&quot;&#39;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="s2">&quot;8px solid transparent&quot;</span><span class="p">};</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;border-&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">H</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;12px&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;border-&quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;10px&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;border-&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">H</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;-color&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">theme</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;50%&quot;</span><span class="p">;</span><span class="nx">m</span><span class="p">[</span><span class="s2">&quot;margin-&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;-8px&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; .&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;::after&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;100%&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;margin-&quot;</span><span class="o">+</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;.border .&quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">onclick</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span></div><div class='line' id='LC23'><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">)}},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">)</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">n</span><span class="p">.</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;rm&quot;</span><span class="o">:</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">)}},</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">b</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">N</span><span class="p">(</span><span class="s2">&quot;breadcrumbs&quot;</span><span class="p">),</span><span class="nx">v</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;aside&quot;</span><span class="p">,{</span><span class="nx">id</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">),{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;z-index&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}),</span><span class="nx">k</span><span class="p">.</span><span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">),</span><span class="nx">A</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">onclick</span><span class="p">(</span><span class="nx">a</span><span class="p">)))},</span><span class="nx">l</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">bottom</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="s2">&quot;10px&quot;</span><span class="p">,</span><span class="s2">&quot;box-sizing&quot;</span><span class="o">:</span><span class="s2">&quot;border-box&quot;</span><span class="p">,</span></div><div class='line' id='LC24'><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translateZ(9999px)&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">i</span><span class="o">+</span><span class="s2">&quot;.disabled&quot;</span><span class="p">,{</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translateZ(0px) !important&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="p">,{</span><span class="s2">&quot;font-size&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;line-height&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot; li&quot;</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;10px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;10px&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;inline-block&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="s2">&quot;3px&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; .&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; li.normal&quot;</span><span class="p">,{</span><span class="s2">&quot;border-radius&quot;</span><span class="o">:</span><span class="s2">&quot;100%&quot;</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="s2">&quot;1px &quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">theme</span><span class="o">+</span><span class="s2">&quot; solid&quot;</span><span class="p">,</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">d</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; .&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot; li.active&quot;</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;12px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;12px&quot;</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="s2">&quot;2px&quot;</span><span class="p">,</span><span class="s2">&quot;background-color&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">theme</span><span class="p">},</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">onclick</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC25'><span class="nx">b</span><span class="o">||</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">)}},</span><span class="nx">G</span><span class="o">:</span><span class="p">{</span><span class="nx">right</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">up</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">left</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">down</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:-</span><span class="mi">1</span><span class="p">}},</span><span class="nx">find</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">e</span><span class="p">),</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">max</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">e</span><span class="p">));</span><span class="nx">d</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span> <span class="k">in</span> <span class="nx">k</span><span class="p">.</span><span class="nx">G</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]]</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">f</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">G</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">x</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="nx">k</span><span class="p">.</span><span class="nx">G</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">y</span><span class="p">)}},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;add&quot;</span><span class="o">:</span><span class="s2">&quot;rm&quot;</span><span class="p">,</span><span class="s2">&quot;active&quot;</span><span class="p">)},</span><span class="nx">create</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">k</span><span class="p">.</span><span class="nx">v</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC26'><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">y</span><span class="o">:</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="mi">0</span><span class="p">}};</span><span class="nx">k</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">F</span><span class="o">=</span><span class="mi">0</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">F</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">F</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;ul&quot;</span><span class="p">),</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">g</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;li&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="mi">0</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">]){</span><span class="nx">r</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;active&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span></div><div class='line' id='LC27'><span class="nx">q</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">m</span><span class="o">=</span><span class="nx">n</span><span class="p">}</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">=</span><span class="nx">b</span><span class="p">}}},</span><span class="nx">D</span><span class="o">=</span><span class="p">{</span><span class="nx">none</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">fade</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">supports</span><span class="p">(</span><span class="s2">&quot;animation&quot;</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">),</span><span class="nx">linear</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">supports</span><span class="p">(</span><span class="s2">&quot;animation&quot;</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">),</span><span class="nx">cube</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">supports</span><span class="p">(</span><span class="s2">&quot;animation&quot;</span><span class="p">,</span><span class="s2">&quot;backface-visibility&quot;</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;transform-style&quot;</span><span class="p">)};</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">fade</span><span class="p">(</span><span class="s2">&quot;slidr-fade-in&quot;</span><span class="p">,</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">fade</span><span class="p">(</span><span class="s2">&quot;slidr-fade-out&quot;</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="s2">&quot;0&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="p">{</span><span class="nx">v</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">K</span><span class="p">,[</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;init&quot;</span><span class="p">])</span><span class="o">||</span><span class="p">{};</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">({</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;block&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;z-index&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span></div><div class='line' id='LC28'><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">},</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">V</span><span class="o">:</span><span class="nx">D</span><span class="p">,</span><span class="nx">K</span><span class="o">:</span><span class="p">{</span><span class="nx">fade</span><span class="o">:</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">linear</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;in&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="s2">&quot;X(-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">right</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="s2">&quot;X(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">up</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="s2">&quot;Y(-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">down</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="p">,</span><span class="s2">&quot;Y(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)}},</span><span class="nx">out</span><span class="o">:</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="s2">&quot;X(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">right</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="s2">&quot;X(-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">up</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC29'><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="s2">&quot;Y(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">down</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">linear</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;out&quot;</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="s2">&quot;Y(-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}},</span><span class="nx">cube</span><span class="o">:</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="p">{</span><span class="s2">&quot;backface-visibility&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="s2">&quot;transform-style&quot;</span><span class="o">:</span><span class="s2">&quot;preserve-3d&quot;</span><span class="p">},</span><span class="s2">&quot;in&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;Y(-90&quot;</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">right</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;Y(90&quot;</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">up</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;X(90&quot;</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)},</span><span class="nx">down</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;X(-90&quot;</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">)}},</span><span class="nx">out</span><span class="o">:</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="s2">&quot;Y(90&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">right</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC30'><span class="s2">&quot;Y(0&quot;</span><span class="p">,</span><span class="s2">&quot;Y(-90&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">up</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="s2">&quot;X(-90&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">down</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="p">.</span><span class="nx">cube</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;X(0&quot;</span><span class="p">,</span><span class="s2">&quot;X(90&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;1&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">)}}}},</span><span class="nx">name</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;fade&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;slidr&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">];</span><span class="s2">&quot;fade&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">)},</span><span class="nx">r</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="s2">&quot;z-index&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;1&quot;</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">),</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="s2">&quot;pointer-events&quot;</span><span class="o">:</span><span class="nx">k</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;auto&quot;</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">)};</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">).</span><span class="nx">m</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">timing</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">V</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">name</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">K</span><span class="p">,[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">]);</span></div><div class='line' id='LC31'><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;up&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">||</span><span class="s2">&quot;down&quot;</span><span class="o">===</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="nx">p</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">fade</span><span class="o">?</span><span class="s2">&quot;0&quot;</span><span class="o">:</span><span class="s2">&quot;1&quot;</span><span class="p">));</span><span class="nx">h</span><span class="p">.</span><span class="nx">animation</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;none&quot;</span><span class="o">:</span><span class="p">[</span><span class="nx">n</span><span class="p">,</span><span class="nx">k</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">Q</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;aside&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="o">!</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-slidr&quot;</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="s2">&quot;body&quot;</span><span class="o">!==</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">tagName</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="kc">null</span><span class="p">);)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="s2">&quot;body&quot;</span><span class="o">===</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">tagName</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;visibility&quot;</span><span class="p">);(</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;out&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">||!</span><span class="nx">c</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC32'><span class="s2">&quot;hidden&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;add&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="o">===</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;rm&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;disabled&quot;</span><span class="p">)}}},</span><span class="nx">p</span><span class="o">=</span><span class="p">{</span><span class="nx">Y</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">),{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="s2">&quot;0&quot;</span><span class="p">}),</span><span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;42px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;42px&quot;</span><span class="p">});</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;border-box&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;box-sizing&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">ba</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">42</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">Z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">42</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="o">===</span><span class="nx">m</span><span class="o">||</span><span class="nx">m</span><span class="o">===</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;min-width&quot;</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="o">===</span><span class="nx">l</span><span class="o">||</span><span class="nx">l</span><span class="o">===</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="o">!==</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;min-height&quot;</span><span class="p">),</span><span class="nx">s</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span></div><div class='line' id='LC33'><span class="nx">W</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding-left&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding-right&quot;</span><span class="p">)},</span><span class="nx">R</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding-top&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;padding-bottom&quot;</span><span class="p">)},</span><span class="nx">ba</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border-left-width&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border-right-width&quot;</span><span class="p">)},</span><span class="nx">Z</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border-top-width&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;border-bottom-width&quot;</span><span class="p">)},</span><span class="nx">T</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">W</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">S</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,{</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">p</span><span class="p">.</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">X</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span> <span class="nx">C</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nb">document</span><span class="p">;(</span><span class="nx">k</span><span class="p">.</span><span class="nx">contains</span><span class="o">?</span></div><div class='line' id='LC34'><span class="nx">k</span><span class="p">.</span><span class="nx">contains</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">compareDocumentPosition</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;</span><span class="mi">16</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;hidden&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;visibility&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">s</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">).</span><span class="nx">m</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">S</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">s</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!=</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">s</span><span class="p">)))</span><span class="o">:</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">C</span><span class="p">}(),</span><span class="mi">250</span><span class="p">)}},</span><span class="nx">n</span><span class="o">=</span><span class="p">{</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;display&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,{</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">),</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;inline-block&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;inline&quot;</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;inline-block&quot;</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;static&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;relative&quot;</span><span class="o">:</span></div><div class='line' id='LC35'><span class="nx">d</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">overflow</span><span class="o">?</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;overflow&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">direction</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">f</span><span class="p">.</span><span class="nx">transition</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">display</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">X</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">Q</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">M</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?!!</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:!!</span><span class="nx">l</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">))},</span><span class="nx">o</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;h&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;up&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;horizontal&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;h&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;down&quot;</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;[Slidr] Error adding [&quot;</span><span class="o">+</span></div><div class='line' id='LC36'><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;] slides for [&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">)}},</span><span class="nx">k</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">w</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">stop</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">.</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">b</span><span class="p">))},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">k</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">c</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;opacity&quot;</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;in&quot;</span><span class="o">:</span><span class="s2">&quot;out&quot;</span><span class="p">;</span><span class="nx">q</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;fade&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;3&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="s2">&quot;in&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;add&quot;</span><span class="o">:</span><span class="s2">&quot;rm&quot;</span><span class="p">,</span><span class="s2">&quot;breadcrumbs&quot;</span><span class="p">)}},</span><span class="nx">controls</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">p</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">valid</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="o">===</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="s2">&quot;visibility&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;none&quot;</span><span class="o">!==</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;in&quot;</span><span class="o">:</span><span class="s2">&quot;out&quot;</span><span class="p">;</span><span class="s2">&quot;out&quot;</span><span class="o">===</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="s2">&quot;border&quot;</span><span class="o">===</span></div><div class='line' id='LC37'><span class="nx">b</span><span class="o">?</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="s2">&quot;border&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;corner&quot;</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="s2">&quot;rm&quot;</span><span class="p">,</span><span class="s2">&quot;border&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;fade&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">controls</span><span class="p">,</span><span class="s2">&quot;2&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">))}}},</span><span class="nx">z</span><span class="o">=</span><span class="p">{},</span><span class="nx">E</span><span class="o">=</span><span class="p">{</span><span class="nx">breadcrumbs</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">controls</span><span class="o">:</span><span class="s2">&quot;border&quot;</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span><span class="nx">fade</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">theme</span><span class="o">:</span><span class="s2">&quot;#fff&quot;</span><span class="p">,</span><span class="nx">timing</span><span class="o">:</span><span class="p">{},</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;linear&quot;</span><span class="p">},</span><span class="nx">F</span><span class="o">=</span><span class="p">{</span><span class="nx">none</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">fade</span><span class="o">:</span><span class="s2">&quot;0.4s ease-out&quot;</span><span class="p">,</span><span class="nx">linear</span><span class="o">:</span><span class="s2">&quot;0.6s ease-out&quot;</span><span class="p">,</span><span class="nx">cube</span><span class="o">:</span><span class="s2">&quot;1s cubic-bezier(0.15, 0.9, 0.25, 1)&quot;</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="nx">version</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;0.1.0&quot;</span><span class="p">},</span><span class="nx">transitions</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">s</span><span class="p">.</span><span class="nx">L</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">)},</span><span class="nx">create</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC38'><span class="nx">v</span><span class="p">(</span><span class="nx">E</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{});</span><span class="nx">d</span><span class="p">.</span><span class="nx">timing</span><span class="o">=</span><span class="nx">v</span><span class="p">(</span><span class="nx">F</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">timing</span><span class="p">);</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="k">new</span> <span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="s2">&quot;[Slidr] Could not find element with id [&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;].&quot;</span><span class="p">)}}}</span><span class="s2">&quot;object&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">y</span><span class="p">()</span><span class="o">:</span><span class="s2">&quot;function&quot;</span><span class="o">===</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">slidr</span><span class="o">=</span><span class="nx">y</span><span class="p">();</span></div></pre></div>
            </td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2013 <span title="0.04245s from github-fe130-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/bchanx/slidr/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

